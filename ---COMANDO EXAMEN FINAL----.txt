---COMANDO EXAMEN FINAL----
Creamos la red de docker
docker network create redExamen

----CONTENEDOR 1-----------
docker run --name alquiler_maestro1 --network redExamen -e POSTGRES_PASSWORD=123456 -p 5435:5432 --cpus=1 --memory=500MB -d -v C:\Users\chris\Desktop\Volumenes\proyectoDB\master1\data --ulimit nofile=1024:1024 postgres
docker exec -it alquiler_maestro1 bash

apt-get update
apt-get install -y build-essential postgresql-server-dev-all
apt-get install -y git
apt-get install -y postgresql-server-dev-15
apt-get install libgssapi3-heimdal libgssapi-krb5-2
apt-get install -y build-essential
apt-get install -y libkrb5-dev
apt-get install -y libselinux1-dev zlib1g-dev liblz4-dev libxslt1-dev libxml2-dev libpam0g-dev
apt-get install -y libzstd-dev
apt-get install -y nano
apt-get update
git clone https://github.com/2ndQuadrant/pglogical.git
cd pglogical

make && make install



nano /var/lib/postgresql/data/postgresql.conf
shared_preload_libraries = 'pglogical’
wal_level = logical
docker stop alquiler_maestro1
docker start alquiler_maestro1
docker exec -it alquiler_maestro1 bash
psql -h localhost -p 5432 -U postgres
CREATE DATABASE alquiler_auto;
\c alquiler_auto;

#CREACION DE LAS TABLAS
CREATE TABLE public.agencia (
   ID_AGENCIA           SERIAL               NOT NULL,
   NOMBRE_AGENCIA       VARCHAR(20)          NULL,
   UBICACION_AGENCIA    VARCHAR(20)          NULL,
   CONSTRAINT PK_AGENCIA PRIMARY KEY (ID_AGENCIA)
);

CREATE TABLE public.alquiler (
   ID_VEHICULO          INT4                 NOT NULL,
   CEDULA_CLIENTE       INT4                 NOT NULL,
   FECHA_INICIO_ALQ     DATE                 NOT NULL,
   FECHA_FIN_ALQ        DATE                 NOT NULL,
   CONSTRAINT PK_ALQUILER PRIMARY KEY (ID_VEHICULO, CEDULA_CLIENTE)
);

CREATE TABLE public.cliente (
   CEDULA_CLIENTE       SERIAL               NOT NULL,
   NOMBRES_CLIENTE      VARCHAR(35)          NULL,
   APELLIDOS_CLIENTE    VARCHAR(35)          NULL,
   TELEFONO_CLIENTE     VARCHAR(10)          NULL,
   DIRECCION_CLIENTE    VARCHAR(50)          NULL,
   CORREO_CLIENTE       VARCHAR(30)          NULL,
   CONSTRAINT PK_CLIENTE PRIMARY KEY (CEDULA_CLIENTE)
);

CREATE TABLE public.vehiculo (
   ID_VEHICULO          SERIAL               NOT NULL,
   ID_AGENCIA           INT4                 NULL,
   TIPO_VEHICULOS       VARCHAR(40)          NULL,
   KILOMETRAJE_VEHICULO VARCHAR(10)          NULL,
   PRECIO_VEHICULO      NUMERIC              NULL,
   DISPONIBILIDAD_VEHICULO BOOL                 NULL,
   CONSTRAINT PK_VEHICULO PRIMARY KEY (ID_VEHICULO)
);


CREATE EXTENSION pglogical;

 SELECT pg_create_logical_replication_slot('replic1', 'pgoutput');

 SELECT pglogical.create_node(node_name := 'node1', dsn := 'host=localhost port=5432 dbname=alquiler_auto user=postgres password=123456');
 SELECT pglogical.create_replication_set('replication_set_1', true);


SELECT pglogical.replication_set_add_table('replication_set_1', 'public.agencia', true);
SELECT pglogical.replication_set_add_table('replication_set_1', 'public.alquiler', true);
SELECT pglogical.replication_set_add_table('replication_set_1', 'public.cliente', true);
SELECT pglogical.replication_set_add_table('replication_set_1', 'public.vehiculo', true);

                                                             
hostname -i  172.17.0.2
SELECT pglogical.create_subscription(
  subscription_name := 'subscription_1',
  provider_dsn := 'host=172.19.0.3 port=5432 dbname=alquiler_auto user=postgres password=123456'
); 
SELECT pglogical.alter_subscription_add_replication_set('subscription_1', 'replication_set_1');


----CONTENEDOR 2-----------
docker run --name alquiler_maestro2 --network redExamen -e POSTGRES_PASSWORD=123456 -p 5436:5432 --cpus=1 --memory=500MB -d -v C:\Users\chris\Desktop\Volumenes\proyectoDB\master2\data --ulimit nofile=1024:1024 postgres

docker exec -it alquiler_maestro2 bash


apt-get update
apt-get install -y build-essential postgresql-server-dev-all
apt-get install -y git
apt-get install -y postgresql-server-dev-15
apt-get install libgssapi3-heimdal libgssapi-krb5-2
apt-get install -y build-essential
apt-get install -y libkrb5-dev
apt-get install -y libselinux1-dev zlib1g-dev liblz4-dev libxslt1-dev libxml2-dev libpam0g-dev
apt-get install -y libzstd-dev
apt-get install -y nano
apt-get update
git clone https://github.com/2ndQuadrant/pglogical.git
cd pglogical

make && make install

nano /var/lib/postgresql/data/postgresql.conf
shared_preload_libraries = 'pglogical’
wal_level = logical
docker stop alquiler_maestro2
docker start alquiler_maestro2
docker exec -it alquiler_maestro2 bash


psql -h localhost -p 5432 -U postgres
CREATE DATABASE alquiler_auto;
\c alquiler_auto;
#CREACION DE LAS TABLAS
CREATE TABLE public.agencia (
   ID_AGENCIA           SERIAL               NOT NULL,
   NOMBRE_AGENCIA       VARCHAR(20)          NULL,
   UBICACION_AGENCIA    VARCHAR(20)          NULL,
   CONSTRAINT PK_AGENCIA PRIMARY KEY (ID_AGENCIA)
);

CREATE TABLE public.alquiler (
   ID_VEHICULO          INT4                 NOT NULL,
   CEDULA_CLIENTE       INT4                 NOT NULL,
   FECHA_INICIO_ALQ     DATE                 NOT NULL,
   FECHA_FIN_ALQ        DATE                 NOT NULL,
   CONSTRAINT PK_ALQUILER PRIMARY KEY (ID_VEHICULO, CEDULA_CLIENTE)
);

CREATE TABLE public.cliente (
   CEDULA_CLIENTE       SERIAL               NOT NULL,
   NOMBRES_CLIENTE      VARCHAR(35)          NULL,
   APELLIDOS_CLIENTE    VARCHAR(35)          NULL,
   TELEFONO_CLIENTE     VARCHAR(10)          NULL,
   DIRECCION_CLIENTE    VARCHAR(50)          NULL,
   CORREO_CLIENTE       VARCHAR(30)          NULL,
   CONSTRAINT PK_CLIENTE PRIMARY KEY (CEDULA_CLIENTE)
);

CREATE TABLE public.vehiculo (
   ID_VEHICULO          SERIAL               NOT NULL,
   ID_AGENCIA           INT4                 NULL,
   TIPO_VEHICULOS       VARCHAR(40)          NULL,
   KILOMETRAJE_VEHICULO VARCHAR(10)          NULL,
   PRECIO_VEHICULO      NUMERIC              NULL,
   DISPONIBILIDAD_VEHICULO BOOL                 NULL,
   CONSTRAINT PK_VEHICULO PRIMARY KEY (ID_VEHICULO)
);


CREATE EXTENSION pglogical;
SELECT pg_create_logical_replication_slot('replic1', 'pgoutput'); 
SELECT pglogical.create_node(node_name := 'node2', dsn := 'host=localhost port=5432 dbname=alquiler_auto user=postgres password=123456');
SELECT slot_name FROM pg_replication_slots WHERE plugin = 'pglogical_output';
SELECT pglogical.create_subscription(
  subscription_name := 'subscription_1',
  provider_dsn := 'host=172.19.0.2 port=5432 dbname=alquiler_auto user=postgres password=123456'
); 
SELECT pglogical.create_replication_set('replication_set_1', true);


SELECT pglogical.replication_set_add_table('replication_set_1', 'public.agencia', true);
SELECT pglogical.replication_set_add_table('replication_set_1', 'public.alquiler', true);
SELECT pglogical.replication_set_add_table('replication_set_1', 'public.cliente', true);
SELECT pglogical.replication_set_add_table('replication_set_1', 'public.vehiculo', true);


SELECT pglogical.alter_subscription_add_replication_set('subscription_1', 'replication_set_1');
 
hostname -i 172.24.0.3


